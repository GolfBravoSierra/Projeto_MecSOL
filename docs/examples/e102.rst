Example 102 "Zweibock"
======================

This model contains two trusses and three nodes. The left and right end nodes are fixed, whereas on the top middle node a reference force is applied in negative z-direction. 

..  figure:: data_e102/model_undeformed.*
    :scale: 100%
    :align: center
    :alt: The undeformed configuration of the Model
    
    The undeformed configuration of the Model
    
The model may be generated with the following code and is shown in the undeformed state.

..  code:: python
    
    import trusspy as tp

    M = tp.Model(logfile=False)

    with M.Nodes as MN:
        MN.add_node( 1, coord=( 0, 0, 0))
        MN.add_node( 2, coord=( 1, 0, 1))
        MN.add_node( 3, coord=( 2, 0, 0))

    with M.Elements as ME:
        ME.add_element( 1, conn=(1,2), gprop=[1] )
        ME.add_element( 2 ,conn=(2,3), gprop=[1] )
        
        E = 1     # elastic modulus
        ME.assign_material( 'all', [E])
        
    with M.Boundaries as MB:
        MB.add_bound_U( 1, (0,0,0) )
        MB.add_bound_U( 2, (0,0,1) )
        MB.add_bound_U( 3, (0,0,0) )
        
    with M.ExtForces as MF:
        MF.add_force( 2, ( 0, 0,-1) )
        
The calculation of the deformation process is started by calling the `build()` and `run()` methods.

..  code:: python

    M.build()
    M.run()
    
    M.plot_model(config=['undeformed'],inc=0)
    M.plot_model(config=['undeformed','deformed'],
                 view='xz',
                 contour='force',
                 lim_scale=(-1,3,-2.5,1.5)
                 )
    fig, ax = M.plot_history(nodes=[2,2],X='Displacement Z',Y='LPF')
        
..  figure:: data_e102/model_deformed.*
    :scale: 100%
    :align: center
    :alt: The deformed configuration of the Model
    
    The deformed configuration of the Model
    
Let's re-run the model with a nonlinear material (plasticity with isotropic hardening). The isotropic yield-modulus `K` and the initial yield stress have to be specified. Additionally, the material has to be changed to `mtype=2`. Results are plotted for Node 2 as a History Plot of z-displacement vs. LPF.

..  code:: python

    with M.Elements as ME:
        E  = 1.0  # elastic modulus
        K  = 0.1  # plastic modulus
        Sy = 0.1  # initial yield stress
        
        ME.assign_mtype(    'all',  1   )
        ME.assign_material( 'all', [E, K, Sy])
        
    M.build()
    M.run() 
    
    fig, ax = M.plot_history(nodes=[2,2],X='Displacement Z',Y='LPF',fig=fig,ax=ax)
    ax.legend(['Node 2: linear elastic','Node 2: elastic-plastic (isotropic hardening)'])
    

..  figure:: data_e102/history_node2_DispZ-LPF.*
    :scale: 100%
    :align: center
    :alt: Displacement Z vs. LPF for Node 2
    
    Displacement Z vs. LPF for Node 2
